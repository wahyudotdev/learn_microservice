version: "3.9"

networks:
  microservice:

volumes:
  mysql-command:
  mysql-query:

x-message-broker-env: &message-broker-env
  AMQP_SERVER_URL: amqp://guest:guest@message-broker-service:5672

x-mysql-product-command: &mysql-product-command-env
  MYSQL_DATABASE: "app"
  MYSQL_USER: "db_user"
  MYSQL_ROOT_PASSWORD: "db_user_pass"
  MYSQL_PASSWORD: "db_user_pass"
  MYSQL_PORT: "3306"
  MYSQL_HOST: "mysql-product-command-service"

x-mysql-product-query: &mysql-product-query-env
  MYSQL_DATABASE: "app"
  MYSQL_USER: "db_user"
  MYSQL_ROOT_PASSWORD: "db_user_pass"
  MYSQL_PASSWORD: "db_user_pass"
  MYSQL_PORT: "3306"
  MYSQL_HOST: "mysql-product-query-service"

services:
  # Create service with RabbitMQ.
  message-broker-service:
    image: rabbitmq:3-management-alpine
    container_name: message-broker
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ${HOME}/dev-rabbitmq/data/:/var/lib/rabbitmq
      - ${HOME}/dev-rabbitmq/log/:/var/log/rabbitmq
    networks:
      - microservice


  product_query_service:
    build: product_q_srv
    container_name: product_q_srv
    networks:
      - microservice
    environment:
      <<: *message-broker-env
      <<: *mysql-product-query-env
      PORT: 443
    restart: on-failure

  product_listener_service:
    build: product_listener_srv
    container_name: product_listener_srv
    networks:
      - microservice
    environment:
      <<: *message-broker-env
      <<: *mysql-product-query-env
    restart: on-failure

  mysql-product-query-service:
    image: mysql:8.0
    container_name: mysql-product-query
    environment:
      <<: *mysql-product-query-env
      PORT: 443
    volumes:
      - mysql-query:/var/lib/mysql
    networks:
      - microservice

  mysql-product-command-service:
    image: mysql:8.0
    container_name: mysql-product-command
    environment:
      <<: *mysql-product-command-env
    volumes:
      - mysql-command:/var/lib/mysql
    networks:
      - microservice

  product_command_service:
    build: product_c_srv
    container_name: product_c_srv
    networks:
      - microservice
    environment:
      <<: *message-broker-env
      <<: *mysql-product-command-env
      PORT: 443
    restart: on-failure

  api_gateway:
    build: api_gateway
    container_name: api_gateway
    networks:
      - microservice
    environment:
      PRODUCT_C_SERVICE: product_command_service:443
      PRODUCT_Q_SERVICE: product_query_service:443
      PORT: 3000
    ports:
      - "3000:3000"
    restart: on-failure